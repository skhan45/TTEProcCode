function runTTE_res(DataDir,fidx,type)

% Add Paths
if ispc
    addpath C:\users\vrk4\Documents\GiHub\SC2000\arfiProcCode\
    addpath(genpath('C:\users\vrk4\Documents\GitHub\TTEProcCode'))
elseif isunix
    addpath /emfd/vrk4/GitHub/SC2000/arfiProcCode
    addpath(genpath('/emfd/vrk4/GitHub/TTEProcCode'))
end

if ~exist('DataDir','var')
    DataDir = pwd;
end
if ~exist('fidx','var')
    fidx = 1;
end


if ~exist('type','var')
    type = 'Both';
end
cd(DataDir)

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Inputs to procTTE
options.dataflow = struct(...
    'display', 1 ...
    ,'ecg_test', 0 ...
    ,'ARFI', 1 ...
    ,'SWEI', 0 ...
    ,'oneSided', 1 ...
    ,'setID',fidx ...
    ,'saveRes', 0 ...
    );
options.dispEst = struct(...
    'method','Loupas'...
    ,'ref_type','Progressive' ...   % anchored/progressive
    ,'ref_idx',[] ...
    ,'nreverb', 2 ...         % Not having the correct nreverb could mess up displacements when using progressive ref_type
    ,'interpFactor', 5 ...
    ,'kernelLength', 4 ...
    ,'DOF_fraction', 1 ... % Fraction of Depth of Field (around focus) to compute displacements for. DOF = 9*lambda*F_num^2
    ,'searchRegion', 4 ...
    ,'ccmode', 1 ...
    );

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Inputs to dispTTE
options.motionFilter = struct(...
    'enable', 1 ...
    ,'method','Both' ... % Polynomial/LPF/Both
    ... % Parameters for Polynomial filter
    ,'order', 2 ...
    ,'timeRange_push',[-1.5 -1 4.5 5] ...
    ,'pre_offset', -6.5 ...
    ... % Parameters for Bandpass filter
    ,'LPF_Cutoff', 1000 ...
    );
options.motionFilter.timeRange_pre = options.motionFilter.timeRange_push + options.motionFilter.pre_offset;

options.display = struct(...
    'theme', 'dark' ... % light/dark
    ,'IQrange',[-40 0] ...
    ,'gateWidth', 3 ...
    ,'gateOffset', 0 ...
    ,'n_pts', 3 ...
    ,'medfilt',[1 0.15] ... % median filter parameters - [axial (mm) acqTime (s)]
    ,'cc_filt', 1 ...
    ,'cc_thresh', 0.995 ...
    ... % ARFI Display Parameters
    ,'disprange',[-5 15] ...
    ,'normalize', 0 ...
    ,'t_disp_push', 0.5 ...
    ,'extras', 0 ...
    ... % SWEI Display Parameters
    ,'velrange',[-5 15] ...
    ,'axial_scan',0 ...
    ,'sw_movie',0 ...
    ,'dvt_plots',0 ...
    ,'sw_display','disp' ... % Display displacements ('disp') or velocity ('vel') data
    );
options.display.t_disp_pre = options.motionFilter.timeRange_pre(1) + (options.display.t_disp_push - options.motionFilter.timeRange_push(1));

options.calcSWS = struct(...
    'enable',0 ...
    ,'method','LinReg' ... LinReg/ LatSum
    ,'metric', 'TTP' ...
    ,'r2_threshold',0.5 ...
    ,'SWSrange',[0 7] ...
    );

list = dir('res_*'); % get timeStamp based on existance of ARFI par files
if size(list,1)<fidx
    error('Data set index requested greater than number of data sets')
end

timeStamp = list(fidx).name(end-17:end-4);
fprintf('Loading data with timeStamp = %s (Set # %d of %d)\n', timeStamp,fidx,size(list,1));

load(strcat('res_',timeStamp,'.mat'));

switch type
    case 'ARFI'
        options.dataflow.ARFI = 1;
        options.dataflow.SWEI = 0;
    case 'SWEI'
        options.dataflow.ARFI = 0;
        options.dataflow.SWEI = 1;
    case 'Both'
end

arfi_par = load(strcat('arfi_par_',timeStamp));
swei_par = load(strcat('swei_par_',timeStamp));
dispTTE(ecgdata,bdata,arfidata,arfi_par,sweidata,swei_par,options,timeStamp);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
